import order from "stylelint-order";
import logical from "stylelint-plugin-logical-css";
import styledSyntax from "postcss-styled-syntax";
import postcssLess from "postcss-less";
import postcssScss from "postcss-scss";
import less from "stylelint-less";
import scss from "stylelint-scss";

export default {
  plugins: [order, logical],
  rules: {
    "annotation-no-unknown": true,
    "at-rule-no-unknown": [
      true,
      {
        ignoreAtRules: [
          "extend",
          "at-root",
          "debug",
          "warn",
          "error",
          "if",
          "else",
          "for",
          "each",
          "while",
          "mixin",
          "include",
          "content",
          "return",
          "function",
          /** tailwindcss */
          "tailwind",
          "apply",
          "layer",
          "config",
        ],
      },
    ],
    "block-no-empty": [true, { message: "禁止空块" }],
    "color-no-invalid-hex": true,
    "comment-no-empty": [true, { message: "禁止空注释" }],
    "custom-property-no-missing-var-function": true,
    "declaration-block-no-duplicate-custom-properties": true,
    "declaration-block-no-duplicate-properties": [
      true,
      {
        ignore: ["consecutive-duplicates-with-different-syntaxes"],
      },
    ],
    "declaration-block-no-shorthand-property-overrides": true,
    "font-family-no-duplicate-names": true,
    "font-family-no-missing-generic-family-keyword": true,
    "function-calc-no-unspaced-operator": true,
    "function-linear-gradient-no-nonstandard-direction": true,
    "function-no-unknown": [
      true,
      {
        ignoreFunctions: ["theme"],
      },
    ],
    "keyframe-block-no-duplicate-selectors": true,
    "keyframe-declaration-no-important": true,
    "media-feature-name-no-unknown": true,
    "media-query-no-invalid": true,
    "named-grid-areas-no-invalid": true,
    "no-descending-specificity": [
      true,
      {
        message:
          "禁止在具有较高优先级的选择器后出现被其覆盖的较低优先级的选择器",
      },
    ],
    "no-duplicate-at-import-rules": true,
    "no-duplicate-selectors": true,
    "no-empty-source": [true, { message: "禁止空源码" }],
    "no-invalid-double-slash-comments": true,
    "no-invalid-position-at-import-rule": true,
    "no-irregular-whitespace": true,
    "property-no-unknown": true,
    "selector-anb-no-unmatchable": true,
    "selector-pseudo-class-no-unknown": [
      true,
      {
        message: "禁止未知的伪类选择器",
        ignorePseudoClasses: ["global", "local", "export", "slotted"],
      },
    ],
    "selector-pseudo-element-no-unknown": true,
    "selector-type-no-unknown": [
      true,
      {
        ignoreTypes: ["/^[a-zA-Z]([a-zA-Z0-9]*-[a-zA-Z0-9]+)+/"],
        message: "禁止未知的类型选择器",
      },
    ],
    "string-no-newline": true,
    "unit-no-unknown": true,
    "alpha-value-notation": [
      "percentage",
      {
        exceptProperties: [
          "opacity",
          "fill-opacity",
          "flood-opacity",
          "stop-opacity",
          "stroke-opacity",
        ],
      },
    ],
    "at-rule-empty-line-before": [
      "always",
      {
        except: ["blockless-after-same-name-blockless", "first-nested"],
        ignore: ["after-comment"],
      },
    ],
    "at-rule-no-vendor-prefix": true,
    "color-function-notation": "modern",
    "color-hex-length": "short",
    "comment-empty-line-before": [
      "always",
      {
        except: ["first-nested"],
        ignore: ["stylelint-commands"],
      },
    ],
    "comment-whitespace-inside": "always",
    "custom-property-empty-line-before": [
      "always",
      {
        except: ["after-custom-property", "first-nested"],
        ignore: ["after-comment", "inside-single-line-block"],
      },
    ],
    "custom-media-pattern": [
      "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
      {
        message: (name) =>
          `Expected custom media query name "${name}" to be kebab-case`,
      },
    ],
    "custom-property-pattern": [
      "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
      {
        message: (name) =>
          `Expected custom property name "${name}" to be kebab-case`,
      },
    ],
    "declaration-block-no-redundant-longhand-properties": true,
    "declaration-block-single-line-max-declarations": 1,
    "declaration-empty-line-before": [
      "always",
      {
        except: ["after-declaration", "first-nested"],
        ignore: ["after-comment", "inside-single-line-block"],
      },
    ],
    "font-family-name-quotes": "always-where-recommended",
    "function-name-case": [
      "lower",
      {
        message: "函数名称使用小写,以-拼接",
        ignoreFunctions: [/a-z\\-/],
      },
    ],
    "function-url-quotes": "always",
    "hue-degree-notation": "angle",
    "import-notation": "url",
    "keyframe-selector-notation": "percentage-unless-within-keyword-only-block",
    "keyframes-name-pattern": [
      "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
      {
        message: (name) => `Expected keyframe name "${name}" to be kebab-case`,
      },
    ],
    "length-zero-no-unit": [
      true,
      {
        ignore: ["custom-properties"],
      },
    ],
    "lightness-notation": "percentage",
    "media-feature-name-no-vendor-prefix": true,
    "media-feature-range-notation": "context",
    "number-max-precision": 4,
    "property-no-vendor-prefix": [
      true,
      { message: "禁止属性的浏览器引擎前缀" },
    ],
    "rule-empty-line-before": [
      "always-multi-line",
      {
        except: ["first-nested"],
        ignore: ["after-comment"],
      },
    ],
    "selector-attribute-quotes": "always",
    "selector-class-pattern": [
      "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
      {
        message: (selector) =>
          `Expected class selector "${selector}" to be kebab-case`,
      },
    ],
    "selector-id-pattern": [
      "^([a-z][a-z0-9]*)(-[a-z0-9]+)*$",
      {
        message: (selector) =>
          `Expected id selector "${selector}" to be kebab-case`,
      },
    ],
    "selector-no-vendor-prefix": true,
    "selector-not-notation": "complex",
    "selector-pseudo-element-colon-notation": "double",
    "selector-type-case": "lower",
    "shorthand-property-no-redundant-values": [
      true,
      { message: "禁止简写属性的冗余值" },
    ],
    "value-keyword-case": "lower",
    "value-no-vendor-prefix": [
      true,
      {
        ignoreValues: ["box", "inline-box"],
        message: "禁止值的浏览器引擎前缀",
      },
    ],
    "plugin/use-logical-properties-and-values": [
      true,
      { severity: "warning", ignore: ["overflow-y", "overflow-x"] },
    ],
    "plugin/use-logical-units": [true, { severity: "warning" }],
    "declaration-property-value-no-unknown": true,
    "unit-allowed-list": [
      "vw",
      "vh",
      "px",
      "%",
      "em",
      "rem",
      "s",
      "deg",
      "ms",
      "ex",
      "ch",
      "fr",
      "dvb",
      "dvi",
      "lvb",
      "lvi",
      "svb",
      "svi",
      "vb",
      "vi",
    ],
    "order/order": [
      "custom-properties",
      "declarations",
      "dollar-variables",
      "rules",
      "at-rules",
    ],
    "order/properties-order": [
      "position",
      "top",
      "right",
      "bottom",
      "left",
      "z-index",
      "display",
      "justify-content",
      "align-items",
      "float",
      "clear",
      "overflow",
      "overflow-x",
      "overflow-y",
      "margin",
      "margin-top",
      "margin-right",
      "margin-bottom",
      "margin-left",
      "border",
      "border-style",
      "border-width",
      "border-color",
      "border-top",
      "border-top-style",
      "border-top-width",
      "border-top-color",
      "border-right",
      "border-right-style",
      "border-right-width",
      "border-right-color",
      "border-bottom",
      "border-bottom-style",
      "border-bottom-width",
      "border-bottom-color",
      "border-left",
      "border-left-style",
      "border-left-width",
      "border-left-color",
      "border-radius",
      "padding",
      "padding-top",
      "padding-right",
      "padding-bottom",
      "padding-left",
      "width",
      "min-width",
      "max-width",
      "height",
      "min-height",
      "max-height",
      "font-size",
      "font-family",
      "font-weight",
      "text-align",
      "text-justify",
      "text-indent",
      "text-overflow",
      "text-decoration",
      "white-space",
      "color",
      "background",
      "background-position",
      "background-repeat",
      "background-size",
      "background-color",
      "background-clip",
      "opacity",
      "filter",
      "list-style",
      "outline",
      "visibility",
      "box-shadow",
      "text-shadow",
      "resize",
      "transition",
    ],
  },
  overrides: [
    {
      files: [
        "**/*.js",
        "**/*.cjs",
        "**/*.mjs",
        "**/*.jsx",
        "**/*.ts",
        "**/*.tsx",
      ],
      customSyntax: styledSyntax,
      rules: {
        "no-empty-source": null,
        "declaration-property-value-no-unknown": null,
      },
    },
    {
      files: ["**/*.less"],
      customSyntax: postcssLess,
      plugins: [less],
      rules: {
        "at-rule-no-unknown": [
          true,
          {
            ignoreAtRules: ["plugin"],
          },
        ],
        "media-query-no-invalid": null,
        "function-no-unknown": null,
        "no-invalid-position-at-import-rule": null,
        "less/color-no-invalid-hex": true,
        "less/no-duplicate-variables": true,
        "selector-pseudo-class-no-unknown": [
          true,
          {
            ignorePseudoClasses: ["global"],
          },
        ],
        "import-notation": "string",
      },
    },
    {
      files: ["**/*.scss"],
      customSyntax: postcssScss,
      plugins: [scss],
      rules: {
        "annotation-no-unknown": null,
        "at-rule-no-unknown": null,
        "comment-no-empty": null,
        "function-no-unknown": null,
        "media-query-no-invalid": null,
        "no-invalid-position-at-import-rule": [
          true,
          {
            ignoreAtRules: ["use", "forward"],
          },
        ],
        "scss/at-extend-no-missing-placeholder": true,
        "scss/at-if-no-null": true,
        "scss/at-rule-no-unknown": true,
        "scss/comment-no-empty": true,
        "scss/declaration-nested-properties-no-divided-groups": true,
        "scss/dollar-variable-no-missing-interpolation": true,
        "scss/function-quote-no-quoted-strings-inside": true,
        "scss/function-unquote-no-unquoted-strings-inside": true,
        "scss/load-no-partial-leading-underscore": true,
        "scss/load-partial-extension": "never",
        "scss/no-duplicate-mixins": true,
        "scss/no-global-function-names": true,
        "scss/operator-no-newline-after": true,
        "scss/operator-no-newline-before": true,
        "scss/operator-no-unspaced": true,
        "at-rule-empty-line-before": [
          "always",
          {
            except: ["blockless-after-blockless", "first-nested"],
            ignore: ["after-comment"],
            ignoreAtRules: ["else"],
          },
        ],
        "import-notation": "string",
        "scss/at-else-closing-brace-newline-after": "always-last-in-chain",
        "scss/at-else-closing-brace-space-after": "always-intermediate",
        "scss/at-else-empty-line-before": "never",
        "scss/at-else-if-parentheses-space-before": "always",
        "scss/at-function-parentheses-space-before": "never",
        "scss/at-function-pattern": [
          "^(-?[a-z][a-z0-9]*)(-[a-z0-9]+)*$",
          {
            message: "Expected function name to be kebab-case",
          },
        ],
        "scss/at-if-closing-brace-newline-after": "always-last-in-chain",
        "scss/at-if-closing-brace-space-after": "always-intermediate",
        "scss/at-mixin-argumentless-call-parentheses": "never",
        "scss/at-mixin-parentheses-space-before": "never",
        "scss/at-mixin-pattern": [
          "^(-?[a-z][a-z0-9]*)(-[a-z0-9]+)*$",
          {
            message: "Expected mixin name to be kebab-case",
          },
        ],
        "scss/at-rule-conditional-no-parentheses": true,
        "scss/dollar-variable-colon-space-after": "always-single-line",
        "scss/dollar-variable-colon-space-before": "never",
        "scss/dollar-variable-empty-line-before": [
          "always",
          {
            except: ["after-dollar-variable", "first-nested"],
            ignore: ["after-comment", "inside-single-line-block"],
          },
        ],
        "scss/dollar-variable-pattern": [
          "^(-?[a-z][a-z0-9]*)(-[a-z0-9]+)*$",
          {
            message: "Expected variable to be kebab-case",
          },
        ],
        "scss/double-slash-comment-empty-line-before": [
          "always",
          {
            except: ["first-nested"],
            ignore: ["between-comments", "stylelint-commands"],
          },
        ],
        "scss/double-slash-comment-whitespace-inside": "always",
        "scss/percent-placeholder-pattern": [
          "^(-?[a-z][a-z0-9]*)(-[a-z0-9]+)*$",
          {
            message: "Expected placeholder to be kebab-case",
          },
        ],
      },
    },
  ],
  ignoreFiles: ["node_modules/**/*", "es/**/*", "lib/**/*", "docs/**/*"],
};
